name: Build and Publish
on:
  push:
    branches:
      - "main"
      - "prerelease/*"
      - "v*"
    tags:
      - "v*"
  pull_request:
    branches:
      - 'main'
      - 'v*'
  release:
    types: [ published ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SERVICE_NAME: platform-api
  IMAGE_NAME: zhimanai.azurecr.io/platform-api

jobs:
  test:
    runs-on: "k8s-sea1"
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: zhimanai.azurecr.io
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Test with pytest
        run: |
          ENV=test python -m pytest --cov=app --cov-report=term-missing:skip-covered --junitxml=pytest.xml | tee pytest-coverage.txt
      - name: Pytest coverage comment
        if: ${{ !contains(github.ref, 'refs/tags/') }}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml


  build:
    runs-on: ${{ matrix.os }}
    #    needs: test
    strategy:
      matrix:
        os: [ ubuntu-latest, ubuntu-24.04-arm, windows-latest, macos-13, macos-latest ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install dependencies
        run: |-
          pip install -r requirements.txt
          pip install -r requirements-build.txt
      - name: Build wheels
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build.cmd
          else
            bash build.sh
          fi
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: ai-search-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./dist/*.whl
